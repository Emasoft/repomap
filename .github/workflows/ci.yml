name: Python CI

on:
  push:
    branches: [ master, dev, release ]
  pull_request:
    branches: [ master, dev, release ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Increased timeout
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    # Split the dependencies installation into multiple steps to avoid timeout issues
    - name: Install pip and testing tools
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov ruff black mypy coverage
      timeout-minutes: 5
      
    - name: Install required packages
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      timeout-minutes: 10
      
    - name: Install package in development mode
      run: |
        pip install -e .
      timeout-minutes: 3

    - name: Install tree-sitter queries
      run: |
        python -m repomap.install_queries
      timeout-minutes: 3

    - name: Lint with ruff
      run: |
        ruff check --ignore E203,E402,E501,E266,W505,F841,F842,F401,W293,I001,UP015,C901,W291 --fix .

    - name: Lint with black
      run: |
        black --check .

    - name: Type check with mypy
      run: |
        mypy --no-warn-unused-ignores --no-warn-unused-configs --no-warn-return-any --no-warn-unreachable repomap

    - name: Test with pytest
      run: |
        python -m coverage run -m pytest tests/
        coverage report --fail-under=80
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Increased timeout
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'

    # Split the dependencies installation into multiple steps to avoid timeout issues
    - name: Install pip and build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
      timeout-minutes: 5
        
    - name: Install package in development mode
      run: |
        pip install -e .
      timeout-minutes: 5

    - name: Build package
      run: |
        python -m build

    - name: Verify package
      run: |
        python -m twine check dist/*